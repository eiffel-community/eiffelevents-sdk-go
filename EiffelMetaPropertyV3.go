// Copyright Axis Communications AB.
//
// For a full list of individual contributors, please see the commit history.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED AND MUST NOT BE EDITED BY HAND.

package eiffelevents

type MetaV3 struct {
	// Mandatory fields
	ID      string `json:"id"`
	Time    int64  `json:"time"`
	Type    string `json:"type"`
	Version string `json:"version"`

	// Optional fields
	SchemaURI string         `json:"schemaUri,omitempty"`
	Security  MetaV3Security `json:"security,omitempty"`
	Source    MetaV3Source   `json:"source,omitempty"`
	Tags      []string       `json:"tags,omitempty"`
}

type MetaV3Security struct {
	// Mandatory fields
	AuthorIdentity string `json:"authorIdentity"`

	// Optional fields
	IntegrityProtection MetaV3SecurityIntegrityProtection  `json:"integrityProtection,omitempty"`
	SequenceProtection  []MetaV3SecuritySequenceProtection `json:"sequenceProtection,omitempty"`
}

type MetaV3SecurityIntegrityProtection struct {
	// Mandatory fields
	Alg       MetaV3SecurityIntegrityProtectionAlg `json:"alg"`
	Signature string                               `json:"signature"`

	// Optional fields
	PublicKey string `json:"publicKey,omitempty"`
}

type MetaV3SecurityIntegrityProtectionAlg string

const (
	MetaV3SecurityIntegrityProtectionAlg_HS256 MetaV3SecurityIntegrityProtectionAlg = "HS256"
	MetaV3SecurityIntegrityProtectionAlg_HS384 MetaV3SecurityIntegrityProtectionAlg = "HS384"
	MetaV3SecurityIntegrityProtectionAlg_HS512 MetaV3SecurityIntegrityProtectionAlg = "HS512"
	MetaV3SecurityIntegrityProtectionAlg_RS256 MetaV3SecurityIntegrityProtectionAlg = "RS256"
	MetaV3SecurityIntegrityProtectionAlg_RS384 MetaV3SecurityIntegrityProtectionAlg = "RS384"
	MetaV3SecurityIntegrityProtectionAlg_RS512 MetaV3SecurityIntegrityProtectionAlg = "RS512"
	MetaV3SecurityIntegrityProtectionAlg_ES256 MetaV3SecurityIntegrityProtectionAlg = "ES256"
	MetaV3SecurityIntegrityProtectionAlg_ES384 MetaV3SecurityIntegrityProtectionAlg = "ES384"
	MetaV3SecurityIntegrityProtectionAlg_ES512 MetaV3SecurityIntegrityProtectionAlg = "ES512"
	MetaV3SecurityIntegrityProtectionAlg_PS256 MetaV3SecurityIntegrityProtectionAlg = "PS256"
	MetaV3SecurityIntegrityProtectionAlg_PS384 MetaV3SecurityIntegrityProtectionAlg = "PS384"
	MetaV3SecurityIntegrityProtectionAlg_PS512 MetaV3SecurityIntegrityProtectionAlg = "PS512"
)

type MetaV3SecuritySequenceProtection struct {
	// Mandatory fields
	Position     int64  `json:"position"`
	SequenceName string `json:"sequenceName"`

	// Optional fields

}

type MetaV3Source struct {
	// Mandatory fields

	// Optional fields
	DomainID   string `json:"domainId,omitempty"`
	Host       string `json:"host,omitempty"`
	Name       string `json:"name,omitempty"`
	Serializer string `json:"serializer,omitempty"`
	URI        string `json:"uri,omitempty"`
}
